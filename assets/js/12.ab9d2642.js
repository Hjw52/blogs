(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{561:function(s,t,a){"use strict";a.r(t);var e=a(13),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("ul",[a("li",[a("h3",{attrs:{id:"层叠机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#层叠机制"}},[s._v("#")]),s._v(" 层叠机制")])])]),s._v(" "),a("p",[s._v("CSS（cascade style sheet ) 中文即层叠样式表，它的核心即通过层叠来处理样式的冲突。那么何为层叠？层叠的机制是：为规则赋予不同的重要程度。最重要的是作者样式表，即开发者所写样式；其次是用户样式表，用户可以通过浏览器的设置为网页应用自己的样式；最后是浏览器的默认样式表。但使用！important放在属性声明后面可以覆盖任何规则。层叠机制的重要性高到低如下：")]),s._v(" "),a("ol",[a("li",[s._v("标记为 ! important 的用户样式")]),s._v(" "),a("li",[s._v("标记为 ! important 的开发者样式")]),s._v(" "),a("li",[s._v("开发者样式")]),s._v(" "),a("li",[s._v("用户样式")]),s._v(" "),a("li",[s._v("浏览器默认样式")])]),s._v(" "),a("p",[s._v("在这基础上，规则再按选择符的特殊性排序，"),a("strong",[s._v("特殊性高的覆盖特殊性低的样式")]),s._v("，如果两条规则的特殊性相等，则"),a("strong",[s._v("后定义的优先")]),s._v("。")]),s._v(" "),a("h4",{attrs:{id:"特殊性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊性"}},[s._v("#")]),s._v(" 特殊性")]),s._v(" "),a("p",[s._v("任何选择符的特殊性都对应以下4个级别，即a,b,c,d：")]),s._v(" "),a("ul",[a("li",[s._v("行内样式，a 为1")]),s._v(" "),a("li",[s._v("b为ID选择符的数目")]),s._v(" "),a("li",[s._v("c为类选择符，伪类 属性选择符的数目（伪类有：link、visited、hover、focus等）")]),s._v(" "),a("li",[s._v("d为类型标签选择符合伪元素选择符的数目（伪元素有：：first-letter、first-line等）")])]),s._v(" "),a("p",[s._v("根据以上规则可以计算出任意选择符的特殊性：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("选择符")]),s._v(" "),a("th",[s._v("特殊性")]),s._v(" "),a("th",[s._v("十进制特殊性")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("style=“ “")]),s._v(" "),a("td",[s._v("1,0,0,0")]),s._v(" "),a("td",[s._v("1000")])]),s._v(" "),a("tr",[a("td",[s._v("#ID1 # ID2")]),s._v(" "),a("td",[s._v("0,2,0,0")]),s._v(" "),a("td",[s._v("200")])]),s._v(" "),a("tr",[a("td",[s._v("#ID1 .class{}")]),s._v(" "),a("td",[s._v("0,1,1,0")]),s._v(" "),a("td",[s._v("110")])]),s._v(" "),a("tr",[a("td",[s._v("p .class1{} .class2{}")]),s._v(" "),a("td",[s._v("0,0,2,1")]),s._v(" "),a("td",[s._v("21")])]),s._v(" "),a("tr",[a("td",[s._v(".class{}")]),s._v(" "),a("td",[s._v("0,0,1,0")]),s._v(" "),a("td",[s._v("10")])]),s._v(" "),a("tr",[a("td",[s._v("div p{ }")]),s._v(" "),a("td",[s._v("0,0,0,2")]),s._v(" "),a("td",[s._v("2")])])])]),s._v(" "),a("p",[s._v("这边的累加规则是基于位置累加的，不是普通的十进制加分。这避免高特殊性选择符被一堆低特殊性选择符的累加值覆盖。对于通用选择符（*），它的特殊性性为0 但比继承的特殊性高。")]),s._v(" "),a("ul",[a("li",[a("h3",{attrs:{id:"样式的引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式的引入"}},[s._v("#")]),s._v(" 样式的引入")]),s._v(" "),a("p",[s._v("样式的声明与引入通常有以下三种方法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<!DOCTYPE html>\n <html lang="en"> \n<head> \n<link rel="stylesheet" rev="stylesheet" href="myCss.css" type="text/css" > \n<style type="text/css" >                \n@import url("./myCss.css"); \n.Mycss{\n\t....\n}\n</style>\n </head> \n</html>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("ol",[a("li",[s._v("直接放在head里的style标签里")]),s._v(" "),a("li",[s._v("在head使用link标签导入外部样式文件")]),s._v(" "),a("li",[s._v("使用@import加载外部CSS文件")])]),s._v(" "),a("p",[s._v("通常下，开发者还是建议多用link 慎用@import 。link属于HTML标签，功能更加强大，而@import只能导入样式表。而且加载页面，link标签引入CSS是同时加载，而@import是在页面加载结束后再加载CSS。样式的声明次序就是它在HTML源代码中出现的次序，要特别注意后声明的样式容易覆盖先前声明的样式。")])]),s._v(" "),a("li",[a("h3",{attrs:{id:"选择器匹配顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择器匹配顺序"}},[s._v("#")]),s._v(" 选择器匹配顺序")]),s._v(" "),a("p",[s._v("对于下面这条规则，选择器是从左边先查找还是右边呢？")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(".admin h3 span {font-size: 16em;}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("答案是先右边查找，先查找span标签。事实上，CSS选择器的读取顺序是："),a("strong",[s._v("从右往左")]),s._v("。先找到所有span 沿span的父元素查找h3，查找到的结果就加入结果集直到根元素不再匹配。一开始就筛掉一大堆不匹配的节点。如果从左到右查找，那么对于不匹配的节点大量回溯会对性能造成极大的浪费。")])]),s._v(" "),a("li",[a("h3",{attrs:{id:"同辈选择符的匹配问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同辈选择符的匹配问题"}},[s._v("#")]),s._v(" 同辈选择符的匹配问题")]),s._v(" "),a("p",[s._v("我们先看下面的代码，你觉得三个p标签的样式是什么？其中 h2 ~ p是选择h2标签同辈的p标签，那么显然3个p标签都是匹配规则的，但真实的渲染结果又是什么样的呢？")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" <header>\n         <p>哈哈啊哈哈哈哈</p>\n          <h2>haha</h2>\n          <p>哈哈啊哈哈哈哈</p>\n          <p>哈哈啊哈哈哈哈</p>\n </header>\n \n h2 ~ p{\n font-weight: bold;\n color: red;\n }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("真实的渲染结果：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/Hjw52/Blog/blob/master/image/image-20201025152631636.png?raw=true",alt:"image-20201025152631636"}})]),s._v(" "),a("p",[s._v("第一个p标签并没有被选中，那又是为什么呢？其实是"),a("strong",[s._v("浏览器不支持向前渲染")]),s._v("，通常情况下，浏览器会按照元素在页面中出现的先后次序给它们应用样式。在给h2前面的P标签应用样式时，h2还不存在，所以不会匹配样式。")]),s._v(" "),a("h3",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);