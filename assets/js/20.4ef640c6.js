(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{569:function(s,n,t){"use strict";t.r(n);var a=t(13),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h3",{attrs:{id:"引言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[s._v("#")]),s._v(" 引言")]),s._v(" "),t("p",[s._v("我们都知道call、apply、bind这3个函数都可以强制绑定this到某个对象，通常将某个原型的方法赋予其他对象时也能用到，比如obj.foo.call(obj2)、Object.prototype.toString.call(obj)等。它们3个函数实现的功能大同小异。一点区别在于传入参数以及返回值的不同。现在我们将从源码角度，解析它的实现。")]),s._v(" "),t("h4",{attrs:{id:"_1-call"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-call"}},[s._v("#")]),s._v(" 1.call")]),s._v(" "),t("p",[s._v("call(context,...args)接收两个参数，第一个为要绑定的对象，如果为null，在非严格模式下，指向全局。第二个则为方法相关参数，有多个参数时用逗号隔开。")]),s._v(" "),t("p",[s._v("它的实现思路为：")]),s._v(" "),t("ol",[t("li",[s._v("为传入的对象拓展属性，将原函数指向这个属性，即赋给对象调用。")]),s._v(" "),t("li",[s._v("将除对象外的所有参数传递给新属性指向，返回结果。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Function.prototype.call2=function(obj,...args){\n\tif(typeof obj==='undefined'|| obj===null){\n\t\tobj=window\n\t}\n\tlet fn=Symbol();//唯一变量\n\tobj[fn]=this //指向原函数\n\tlet res=obj[fn](...args)//执行函数\n\tdelete obj[fn]\n\treturn res;//返回结果\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("测试：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("add.call2(object,1,2) //这边只是调用形式\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"_2-apply"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-apply"}},[s._v("#")]),s._v(" 2.apply")]),s._v(" "),t("p",[s._v("思路和call一样，只是第二个参数，多参数时不用逗号，而是直接传数组。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Function.prototype.call2=function(obj,args){\t//主要这边不用...\n\tif(typeof obj==='undefined'|| obj===null){\n\t\tobj=window\n\t}\n\tlet fn=Symbol();//唯一变量\n\tobj[fn]=this //指向原函数\n\tif(arr===[]){\n\t\t//传入空数组直接执行\n\t\treturn obj[fn];\n\t\tdelete obj[fn];\n\t}\n\tlet res=obj[fn](...args)//执行函数\n\tdelete obj[fn]\n\treturn res;//返回结果\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("测试：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("add.call2(object,[1,2]) //这边只是调用形式\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"_3-bind"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-bind"}},[s._v("#")]),s._v(" 3.bind")]),s._v(" "),t("p",[t("code",[s._v("bind()")]),s._v("方法创建一个新的函数，在"),t("code",[s._v("bind()")]),s._v("被调用时，这个新函数的"),t("code",[s._v("this")]),s._v("被"),t("code",[s._v("bind")]),s._v("的第一个参数指定，其余的参数将作为新函数的参数供调用时使用。call、apply返回的都是函数直接调用后的结果，而bind只返回函数，并没有执行函数。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Function.prototype.bind2=function(targrt){\n\tif(typeof obj==='undefined'|| obj===null){\n\t\tobj=window\n\t}\n\tvar self=this;//原函数\n\treturn function(...args){ //返回接收参数的函数\n\t\treturn self.apply(targrt,args)\t//修改this\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("在JavaScript引擎中实际源码还会做很多性能优化，但基本思路是一致的。")])])}),[],!1,null,null,null);n.default=e.exports}}]);